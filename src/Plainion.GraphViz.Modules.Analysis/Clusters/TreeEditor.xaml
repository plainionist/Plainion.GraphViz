<UserControl x:Class="Plainion.GraphViz.Modules.Analysis.Clusters.TreeEditor"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:pn="http://github.com/ronin4net/plainion"
             xmlns:tree="clr-namespace:Plainion.GraphViz.Modules.Analysis.Clusters"
             x:Name="_this"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">

    <DockPanel LastChildFill="True" DataContext="{Binding ElementName=_this}">
        <DockPanel.Resources>
            <!-- Binds to TreeEditor itself which only works because DockPanel DataContext is set to TreeEditor itself-->
            <pn:BindingProxy x:Key="ThisProxy" Data="{Binding}"/>

            <DataTemplate x:Key="NodeTemplate">
                <!-- keep empty by intention -->
            </DataTemplate>
        </DockPanel.Resources>

        <Grid DockPanel.Dock="Top"  HorizontalAlignment="Stretch">
            <pn:SearchTextBox SearchMode="Instant" Text="{Binding Path=Filter, Mode=TwoWay}" SearchEventTimeDelay="0" LabelText="{Binding FilterLabel}"/>
        </Grid>

        <tree:ExtendedTreeView x:Name="myTree" Margin="0,3,0,0" ItemsSource="{Binding Root.Children}">
            <tree:ExtendedTreeView.ItemContainerStyle>
                <Style TargetType="{x:Type tree:NodeView}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type tree:NodeView}">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <pn:BindingProxy x:Key="RealDataContext" Data="{Binding}"/>
                                    </StackPanel.Resources>
                                    <Grid Margin="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                      ClickMode="Press" Name="Expander">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="UIElement.Focusable" Value="false" />
                                                    <Setter Property="FrameworkElement.Width" Value="16" />
                                                    <Setter Property="FrameworkElement.Height" Value="16" />
                                                    <Setter Property="Control.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                                    <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                        <Path.Data>
                                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                        </Path.Data>
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                                    </Trigger>
                                                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                        <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                        <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                            HorizontalAlignment="Stretch"
                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            Background="{TemplateBinding Panel.Background}"
                                            SnapsToDevicePixels="True"
                                            Grid.Column="1">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="Transparent" 
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                <StackPanel.Resources>
                                                    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                                                </StackPanel.Resources>

                                                <i:Interaction.Behaviors>
                                                    <pn:FrameworkElementDragBehavior/>
                                                    <pn:DropSortableItemsBehavior/>
                                                    <pn:RaiseCommandOnMouseGestureBehavior ClickCount="2" MouseButton="Left" Command="{Binding EditCommand}"/>
                                                </i:Interaction.Behaviors>

                                                <pn:EditableTextBlock x:Name="PART_FormattedText" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                                                Text="{Binding Text, Mode=TwoWay}" Focusable="False"
                                                                FormattedText="{Binding FormattedText, Mode=OneWay}" 
                                                                IsInEditMode="{Binding IsInEditMode, Mode=TwoWay}"/>
                                            </StackPanel>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch"/>
                                    </Grid>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                        <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems" Value="False">
                                        <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                        <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Text" Value="{Binding Caption, Mode=TwoWay}"/>
                    <Setter Property="ToolTip" Value="{Binding Id}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsFilteredOut" Value="{Binding IsFilteredOut}"/>
                    <Setter Property="FormattedText" Value="{Binding DisplayText}"/>
                </Style>
            </tree:ExtendedTreeView.ItemContainerStyle>
            <tree:ExtendedTreeView.Resources>
                <pn:BindingProxy x:Key="TreeProxy" Data="{Binding ElementName=myTree}"/>
            </tree:ExtendedTreeView.Resources>

            <i:Interaction.Behaviors>
                <!--
                When we use this here together with EditableTextBlock in the nodes we break
                setting the cursor with click in the TextBox
                <interactivity:FocusOnClickBehavior/>
                -->
                <pn:FrameworkElementDropBehavior/>
            </i:Interaction.Behaviors>

            <tree:ExtendedTreeView.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <pn:ConverterChain x:Key="CollapseIfNullConverter">
                            <pn:IsEmptyConverter/>
                            <pn:NotConverter/>
                            <pn:BoolToVisibilityConverter/>
                        </pn:ConverterChain>
                        <pn:ConverterChain x:Key="IsBoundConverter">
                            <pn:IsEmptyConverter/>
                            <pn:NotConverter/>
                        </pn:ConverterChain>
                    </ContextMenu.Resources>
                    <MenuItem Header="New" Command="{Binding CreateChildCommand}" CommandParameter="{Binding Data.NodeForContextMenu, Source={StaticResource TreeProxy}}"
                              Visibility="{Binding CreateChildCommand, Mode=OneWay, Converter={StaticResource CollapseIfNullConverter}}"/>
                    <MenuItem Header="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding Data.NodeForContextMenu, Source={StaticResource TreeProxy}}"
                              Visibility="{Binding DeleteCommand, Mode=OneWay, Converter={StaticResource CollapseIfNullConverter}}"/>
                    <Separator>
                        <Separator.Visibility>
                            <MultiBinding>
                                <Binding Path="CreateChildCommand" Converter="{StaticResource IsBoundConverter}"/>
                                <Binding Path="DeleteCommand" Converter="{StaticResource IsBoundConverter}"/>
                                <MultiBinding.Converter>
                                    <pn:OrConverter>
                                        <pn:BoolToVisibilityConverter/>
                                    </pn:OrConverter>
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </Separator.Visibility>
                    </Separator>
                    <MenuItem Header="Expand All" Command="{Binding ExpandAllCommand}"/>
                    <MenuItem Header="Collapse All" Command="{Binding CollapseAllCommand}"/>
               </ContextMenu>
            </tree:ExtendedTreeView.ContextMenu>

            <tree:ExtendedTreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource NodeTemplate}"/>
                </HierarchicalDataTemplate>
            </tree:ExtendedTreeView.ItemTemplate>
        </tree:ExtendedTreeView>
    </DockPanel>
</UserControl>
